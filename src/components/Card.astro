---
import type { FeedItem } from "../env";
import { Image } from "@astrojs/image/components";

export interface Props {
    item: FeedItem;
}

const {
    item: {
        author,
        contentSnippet,
        link,
        pubDate,
        title,
        "media:thumbnail": { $: { url: thumbnail } } = { $: {} },
    },
} = Astro.props;
---

<li class="container">
    <a class="link" href={link} target="_blank">
        <h2 class="title">
            {title}
            {link && <span class="arrow">&rarr;</span>}
        </h2>
        <p class="section">
            <b
                >{pubDate && new Date(pubDate).toLocaleString()}
                {author && <>&#8226; {author}</>}
            </b>
        </p>
        <p class="section">
            {
                thumbnail && (
                    <Image
                        alt=""
                        class="thumbnail"
                        format="webp"
                        height="128"
                        loading="lazy"
                        src={thumbnail}
                        width="128"
                    />
                )
            }
            {contentSnippet}
        </p>
    </a>
</li>

<style>
    :root {
        --link-gradient: linear-gradient(
            45deg,
            var(--color-primary),
            var(--color-secondary) 30%,
            var(--color-border) 60%
        );
    }

    .container {
        list-style: none;
        display: flex;
        padding: 0.15rem;
        background-image: var(--link-gradient);
        background-size: 400%;
        border-radius: 0.5rem;
        background-position: 100%;
        transition: background-position 0.6s cubic-bezier(0.22, 1, 0.36, 1);
    }

    .container > a.link {
        width: 100%;
        text-decoration: none;
        line-height: 1.4;
        padding: 1em 1.3em;
        border-radius: 0.35rem;
        color: var(--text-color);
        background-color: white;
        opacity: 0.8;
    }

    h2.title {
        font-size: var(--font-size-lg);
        margin: 0;
        transition: color 0.6s cubic-bezier(0.22, 1, 0.36, 1);
    }

    h2.title span.arrow {
        display: inline-block;
        transition: transform 0.3s cubic-bezier(0.22, 1, 0.36, 1);
    }

    img.thumbnail {
        float: left;
        padding: 0.1rem;
        margin-right: 0.75rem;
        background-image: var(--link-gradient);
        background-size: 400%;
        border-radius: 0.5rem;
        background-position: 100%;
        transition: background-position 0.6s cubic-bezier(0.22, 1, 0.36, 1);
    }

    p.section {
        margin-top: 0.75rem;
        margin-bottom: 0;
    }

    .container:is(:hover, :focus-within),
    .container:is(:hover, :focus-within) img.thumbnail {
        background-position: 0;
    }

    .container:is(:hover, :focus-within) h2.title {
        color: var(--color-primary);
    }

    .container:is(:hover, :focus-within) h2.title span.arrow {
        will-change: transform;
        transform: translateX(2px);
    }
</style>
